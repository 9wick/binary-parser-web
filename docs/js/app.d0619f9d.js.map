{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/parser/util.ts","webpack:///./src/components/ParserView.vue","webpack:///./src/components/ParserView.vue?6d09","webpack:///./src/components/ParserView.vue?0816","webpack:///./src/parser/base/Context.ts","webpack:///./src/parser/base/BinaryParser.ts","webpack:///./src/components/ParserView.vue?e564","webpack:///./src/App.vue","webpack:///./src/App.vue?dfb6","webpack:///./src/views/BleAdvertisement.vue","webpack:///./src/parser/ble/adv/index.ts","webpack:///./src/views/BleAdvertisement.vue?95c9","webpack:///./src/views/BleAdvertisement.vue?dde4","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/App.vue?aeb8"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","CustomParser","varName","options","count","this","setNextParser","newParser","repeatName","parentParser","repeatParser","buffer","root","_endPosition","childResult","parse","removePrivateKeys","obj","returnVal","keys","sort","one","startsWith","Buffer","toString","Array","isArray","map","getCode","meanings","list2meaning","list","choices","list2choices","defaultParser","getNestParser","readUntil","meaning","choice","choiceOptions","tag","defaultChoice","choiceArg1","nest","choiceArg2","primitiveN","encoding","string","f","parser","saveOffset","seek","_startPosition","getDefaultParser","for","inputText","style","id","inputType","addQuery","results","level","resetKey","render","__scopeId","importPath","code","scopes","bitFields","tmpVariableCount","references","imports","reverseImports","Map","arr","join","val","generateVariable","addImport","pushCode","pop","im","set","alias","resolved","requested","aliasList","forEach","filter","aliasRegistry","FUNCTION_PREFIX","FUNCTION_ENCODE_PREFIX","PRIMITIVE_SIZES","uint8","uint16le","uint16be","uint32le","uint32be","int8","int16le","int16be","int32le","int32be","int64be","int64le","uint64be","uint64le","floatle","floatbe","doublele","doublebe","PRIMITIVE_NAMES","PRIMITIVE_LITTLE_ENDIANS","CAPITILIZED_TYPE_NAMES","bit","array","pointer","opts","next","compiled","compiledEncode","endian","constructorFn","lastOffset","smartBufferSize","encoderOpts","bitEndianess","ctx","typeName","littleEndian","toLowerCase","useThisEndian","DataView","getBigInt64","bigIntVersionCheck","size","bitN","relOffset","assert","zeroTerminated","greedy","stripNull","lengthInBytes","indexOf","keyString","parseInt","isNaN","Parser","offset","assign","Function","addAliasedCode","addRawCode","getContext","generateError","addAliasedCodeEncode","addRawCodeEncode","getContextEncode","generate","resolveReferences","generateEncode","markResolved","encode","getUnresolvedReferences","markRequested","TextDecoder","vars","SmartBuffer","NaN","elementSize","sizeOf","compile","compileEncode","primitiveGenerateN","generateBit","generateString","generateBuffer","generateSeek","generateNest","generateArray","generateChoice","generateMeaning","generatePointer","generateSaveOffset","generateAssert","formatter","generateFormatter","generateNext","savVarName","generateTmpVariable","encoder","generateEncoder","primitiveGenerate_encodeN","generate_encodeBit","generate_encodeString","generate_encodeBuffer","generate_encodeSeek","generate_encodeNest","generate_encodeArray","generate_encodeChoice","generate_encodeMeaning","generate_encodePointer","generate_encodeSaveOffset","generateEncodeNext","func","JSON","stringify","sum","val1","val2","bitOffset","isBigEndian","mask","isBitLittleEndian","tmpVal","boundVal","generateOption","start","isHex","toHex","len","end","trim","optLength","tmpBuf","padLen","padCharVar","padChar","padd","charCodeAt","String","fromCharCode","padding","pred","cur","clone","counter","lhs","item","isHash","tempVar","addReference","pushScope","popScope","itemCounter","maxItems","savSmartBuffer","encodeUntil","tmpBuffer","pushPath","popPath","generateChoiceCase","generate_encodeChoiceCase","nestVar","ParserView","startParse","$router","query","text","$route","dataArray","getInputDataArray","getParser","from","dataString","split","to","components","JsonTree","advFlags","bit3","bit1","advLocalName","advDefault","oneAdPaser","enum","1","2","3","4","5","6","7","8","9","BleAdvertisementParser","endianess","subArray","routes","path","redirect","component","router","history","App","use","mount"],"mappings":"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","file":"js/app.d0619f9d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"about\":\"about\"}[chunkId]||chunkId) + \".\" + {\"about\":\"733fb07d\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/binary-parser-web/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Parser } from './base/BinaryParser';\n\n// interface CustomParserOptions extends Parser.prototype.uint8.arguments[1] {\n//   type?: string | Parser | ParserOptions;\n//   count?: number;\n// }\n\n// const stopParser = new Parser();\n\nexport class CustomParser extends Parser {\n  private repeatParser?: CustomParser;\n  public parentParser?: CustomParser;\n  private repeatName?: string;\n\n  repeat(varName: string, options: any) {\n    if (typeof options.count === 'number') {\n      for (let i = 0; i < options.count; i++) {\n        (this as any).setNextParser('nest', varName + '' + i, options);\n      }\n      return this;\n    }\n\n    const newParser = options.type;\n    this.repeatName = varName;\n    newParser.parentParser = this;\n    this.repeatParser = newParser;\n    return newParser;\n  }\n\n  parse(buffer: Buffer | Uint8Array, root = true): any {\n    const result = super.parse(buffer);\n    const length = buffer.length;\n    let count = 0;\n    while (this.repeatParser && result._endPosition !== length) {\n      const childResult = this.repeatParser.parse(\n        buffer.slice(result._endPosition),\n        false\n      );\n      result[this.repeatName! + count] = childResult;\n      result._endPosition += childResult._endPosition;\n      count++;\n    }\n\n    // result.raw = buffer.slice(0, result._endPosition);\n    const removePrivateKeys = (obj: any) => {\n      if (\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'number'\n      ) {\n        return obj;\n      }\n      const returnVal: any = {};\n      for (const one of Object.keys(obj).sort()) {\n        if (root && one.startsWith('_') && one !== '_raw') {\n          continue;\n        }\n        if (obj[one] instanceof Buffer) {\n          returnVal[one] = obj[one].toString('hex');\n        } else if (Array.isArray(obj[one])) {\n          returnVal[one] = obj[one].map(removePrivateKeys);\n        } else if (typeof obj[one] === 'object') {\n          returnVal[one] = removePrivateKeys(obj[one]);\n        } else {\n          returnVal[one] = obj[one];\n        }\n      }\n      return returnVal;\n    };\n    return removePrivateKeys(result);\n  }\n\n  getCode(): string {\n    return super.getCode() + '\\n //---------\\n' + this.repeatParser?.getCode();\n  }\n\n  enum(varName: string, type: any | null, options: any) {\n    const meanings: any = CustomParser.list2meaning(options.list);\n    const choices: any = CustomParser.list2choices(options.list);\n\n    const defaultParser = CustomParser.getNestParser(p => {\n      p.buffer('data', {\n        readUntil: 'eof',\n      });\n    });\n    Object.keys(options.list).map(key => {\n      meanings[key] = options.list[key].meaning;\n      choices[key] = options.list[key].choice || defaultParser;\n    });\n\n    const choiceOptions = {\n      tag: varName,\n      choices,\n      defaultChoice: options.defaultChoice\n        ? options.defaultChoice\n        : defaultParser,\n    };\n    const choiceArg1 =\n      options.nest !== false ? varName + 'Data' : choiceOptions;\n    const choiceArg2 = options.nest !== false ? choiceOptions : undefined;\n    if (type) {\n      this.primitiveN(type, varName);\n    }\n    this.meaning(varName + 'String', {\n      tag: varName,\n      meanings,\n    }).choice(choiceArg1, choiceArg2);\n    return this;\n  }\n\n  static getDefaultParser(f?: (p: CustomParser) => void) {\n    const parser = new CustomParser().saveOffset('_startPosition');\n    if (f) {\n      f(parser);\n    }\n    parser\n      .saveOffset('_endPosition')\n      .seek(function() {\n        // @ts-ignore\n        return -1 * (this._endPosition - this._startPosition);\n      })\n      .string('_raw', {\n        encoding: 'hex',\n        length: function() {\n          // @ts-ignore\n          return this._endPosition - this._startPosition;\n        },\n      });\n\n    return parser;\n  }\n\n  hex(varName: string, options: any) {\n    options.encoding = 'hex';\n    return this.string(varName, options);\n  }\n\n  static getNestParser(f?: (p: CustomParser) => void) {\n    const parser = new CustomParser();\n    if (f) {\n      f(parser);\n    }\n    return parser;\n  }\n\n  static list2meaning(list: any) {\n    const meanings: any = {};\n    Object.keys(list).map(key => {\n      meanings[key] = list[key].meaning;\n    });\n    return meanings;\n  }\n\n  static list2choices(list: any) {\n    const choices: any = {};\n    Object.keys(list).map(key => {\n      if (list[key]) {\n        choices[key] = list[key].choice;\n      }\n    });\n    return choices;\n  }\n}\n\nexport const getDefaultParser = CustomParser.getDefaultParser;\nexport const getNestParser = CustomParser.getNestParser;\n","<template>\n  <div>\n    Input data (space or comma separated data)<br />\n    <input type=\"text\" v-model=\"inputText\" style=\"width:100%\" /><br />\n    number type :\n    <input\n      type=\"radio\"\n      name=\"number_type\"\n      id=\"number_type_hex\"\n      v-model=\"inputType\"\n      value=\"hex\"\n    /><label for=\"number_type_hex\">HEX(0x0〜0xFF)</label>\n    <input\n      type=\"radio\"\n      name=\"number_type\"\n      id=\"number_type_dec\"\n      v-model=\"inputType\"\n      value=\"dec\"\n    /><label for=\"number_type_dec\">DEC(0~255)</label><br />\n\n    <button v-on:click=\"addQuery\">Parse</button>\n    <br />\n    <br />\n    results: <br />\n    <json-tree :data=\"results\" :level=\"1\" :key=\"resetKey\"></json-tree>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport JsonTree from 'vue-json-tree';\nimport { Prop, Watch } from 'vue-property-decorator';\nimport { CustomParser } from '@/parser/util';\n\n@Options({\n  components: {\n    JsonTree,\n  },\n})\nexport default class ParserView extends Vue {\n  inputText = '';\n  inputType = 'dec';\n  results: any = { error: 'no input' };\n  resetKey = 1;\n\n  @Prop({ type: Function })\n  getParser!: () => CustomParser;\n\n  mounted() {\n    // console.log(this.getParser().getCode());\n    this.startParse();\n  }\n\n  addQuery() {\n    this.$router.push({\n      query: { text: this.inputText, type: this.inputType },\n    });\n  }\n\n  startParse() {\n    this.inputText = this.$route.query.text ? '' + this.$route.query.text : '';\n    this.inputType = this.$route.query.type\n      ? '' + this.$route.query.type\n      : 'hex';\n    try {\n      const dataArray = this.getInputDataArray();\n      if (dataArray.length === 0) {\n        this.results = { error: 'no input' };\n        return;\n      }\n      this.results = this.getParser().parse(Buffer.from(dataArray));\n      this.resetKey++;\n    } catch (e) {\n      console.error(e);\n      this.results = { error: e.message, e };\n    }\n  }\n\n  getInputDataArray() {\n    const dataString = this.$route.query.text\n      ? '' + this.$route.query.text\n      : '';\n    let dataArray = [];\n    if (dataString.indexOf(',') >= 0) {\n      dataArray = dataString\n        .trim()\n        .split(',')\n        .map(e => {\n          return e.trim();\n        })\n        .filter(e => {\n          return e.length > 0;\n        });\n    } else {\n      dataArray = dataString\n        .trim()\n        .split(' ')\n        .map(e => {\n          return e.trim();\n        })\n        .filter(e => {\n          return e.length > 0;\n        });\n    }\n    if (this.inputType === 'hex') {\n      dataArray = dataArray.map(e => {\n        return parseInt(e, 16);\n      });\n    } else {\n      dataArray = dataArray.map(e => {\n        return parseInt(e);\n      });\n    }\n    return dataArray;\n  }\n\n  @Watch('$route')\n  routeChange(from: any, to: any) {\n    this.startParse();\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\ncode {\n  text-align: left;\n}\n</style>\n","import { render } from \"./ParserView.vue?vue&type=template&id=5b4a9f6c&scoped=true\"\nimport script from \"./ParserView.vue?vue&type=script&lang=ts\"\nexport * from \"./ParserView.vue?vue&type=script&lang=ts\"\n\nimport \"./ParserView.vue?vue&type=style&index=0&id=5b4a9f6c&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5b4a9f6c\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ParserView.vue?vue&type=style&index=0&id=5b4a9f6c&scoped=true&lang=css\"","import { Parser } from './BinaryParser';\n\nexport class Context {\n  code = '';\n  scopes = [['vars']];\n  bitFields: Parser[] = [];\n  tmpVariableCount = 0;\n  references: { [key: string]: { resolved: boolean; requested: boolean } } = {};\n  importPath?: string;\n  imports: any[] = [];\n  reverseImports = new Map<any, number>();\n\n  constructor(importPath?: string) {\n    this.importPath = importPath;\n  }\n\n  generateVariable(name?: string) {\n    const arr = [];\n\n    const scopes = this.scopes[this.scopes.length - 1];\n    arr.push(...scopes);\n    if (name) {\n      arr.push(name);\n    }\n    if (arr.length < 1) {\n      return arr.join('.');\n    }\n    return (\n      arr[0] +\n      arr\n        .slice(1)\n        .map(e => `[\"${e}\"]`)\n        .join('')\n    );\n  }\n\n  generateOption(val: number | string | Function | null | undefined) {\n    switch (typeof val) {\n      case 'number':\n        return val.toString();\n      case 'string':\n        return this.generateVariable(val);\n      case 'function':\n        return `${this.addImport(val)}.call(${this.generateVariable()}, vars)`;\n    }\n  }\n\n  generateError(err: string) {\n    this.pushCode('throw new Error(' + err + ');');\n  }\n\n  generateTmpVariable() {\n    return '$tmp' + this.tmpVariableCount++;\n  }\n\n  pushCode(code: string) {\n    this.code += code + '\\n';\n  }\n\n  pushPath(name: string) {\n    if (name) {\n      this.scopes[this.scopes.length - 1].push(name);\n    }\n  }\n\n  popPath(name: string) {\n    if (name) {\n      this.scopes[this.scopes.length - 1].pop();\n    }\n  }\n\n  pushScope(name: string) {\n    this.scopes.push([name]);\n  }\n\n  popScope() {\n    this.scopes.pop();\n  }\n\n  addImport(im: any) {\n    if (!this.importPath) return `(${im})`;\n    let id = this.reverseImports.get(im);\n    if (!id) {\n      id = this.imports.push(im) - 1;\n      this.reverseImports.set(im, id);\n    }\n    return `${this.importPath}[${id}]`;\n  }\n\n  addReference(alias: string) {\n    if (this.references[alias]) return;\n    this.references[alias] = { resolved: false, requested: false };\n  }\n\n  markResolved(alias: string) {\n    this.references[alias].resolved = true;\n  }\n\n  markRequested(aliasList: string[]) {\n    aliasList.forEach(alias => {\n      this.references[alias].requested = true;\n    });\n  }\n\n  getUnresolvedReferences() {\n    const references = this.references;\n    return Object.keys(this.references).filter(\n      alias => !references[alias].resolved && !references[alias].requested\n    );\n  }\n}\n","import { Context } from './Context';\nimport { SmartBuffer } from 'smart-buffer';\n/* eslint-disable */\n\nconst aliasRegistry: { [key: string]: Parser } = {};\nconst FUNCTION_PREFIX = '___parser_';\nconst FUNCTION_ENCODE_PREFIX = '___encoder_';\n\ninterface ParserOptions {\n  length?: number | string | ((item: any) => number);\n  assert?: number | string | ((item: number | string) => boolean);\n  lengthInBytes?: number | string | ((item: any) => number);\n  type?: string | Parser;\n  formatter?: (item: any) => string | number;\n  encoder?: (item: any) => any;\n  encoding?: string;\n  readUntil?: 'eof' | ((item: any, buffer: any) => boolean);\n  encodeUntil?: 'eof' | ((item: any, buffer: any) => boolean);\n  greedy?: boolean;\n  choices?: { [key: number]: string | Parser };\n  meanings?: { [key: number]: string  };\n  defaultChoice?: string | Parser;\n  zeroTerminated?: boolean;\n  clone?: boolean;\n  stripNull?: boolean;\n  trim?: boolean;\n  padding?: string;\n  padd?: string;\n  key?: string;\n  tag?: string;\n  offset?: number | string | ((item: any) => number);\n}\n\ninterface EncoderOptions {\n  bitEndianess?: boolean;\n}\n\ntype Types = PrimitiveTypes | ComplexTypes;\n\ntype ComplexTypes =\n  | 'bit'\n  | 'string'\n  | 'buffer'\n  | 'array'\n  | 'choice'\n  | 'meaning'\n  | 'nest'\n  | 'seek'\n  | 'pointer'\n  | 'saveOffset'\n  | '';\n\ntype Endianess = 'be' | 'le';\n\ntype PrimitiveTypes =\n  | 'uint8'\n  | 'uint16le'\n  | 'uint16be'\n  | 'uint32le'\n  | 'uint32be'\n  | 'uint64le'\n  | 'uint64be'\n  | 'int8'\n  | 'int16le'\n  | 'int16be'\n  | 'int32le'\n  | 'int32be'\n  | 'int64le'\n  | 'int64be'\n  | 'floatle'\n  | 'floatbe'\n  | 'doublele'\n  | 'doublebe';\n\ntype PrimitiveTypesWithoutEndian =\n  | 'uint8'\n  | 'uint16'\n  | 'uint32'\n  | 'int8'\n  | 'int16'\n  | 'int32'\n  | 'int64'\n  | 'uint64';\n\ntype BitSizes =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25\n  | 26\n  | 27\n  | 28\n  | 29\n  | 30\n  | 31\n  | 32;\n\nconst PRIMITIVE_SIZES: { [key in PrimitiveTypes]: number } = {\n  uint8: 1,\n  uint16le: 2,\n  uint16be: 2,\n  uint32le: 4,\n  uint32be: 4,\n  int8: 1,\n  int16le: 2,\n  int16be: 2,\n  int32le: 4,\n  int32be: 4,\n  int64be: 8,\n  int64le: 8,\n  uint64be: 8,\n  uint64le: 8,\n  floatle: 4,\n  floatbe: 4,\n  doublele: 8,\n  doublebe: 8,\n};\n\nconst PRIMITIVE_NAMES: { [key in PrimitiveTypes]: string } = {\n  uint8: 'Uint8',\n  uint16le: 'Uint16',\n  uint16be: 'Uint16',\n  uint32le: 'Uint32',\n  uint32be: 'Uint32',\n  int8: 'Int8',\n  int16le: 'Int16',\n  int16be: 'Int16',\n  int32le: 'Int32',\n  int32be: 'Int32',\n  int64be: 'BigInt64',\n  int64le: 'BigInt64',\n  uint64be: 'BigUint64',\n  uint64le: 'BigUint64',\n  floatle: 'Float32',\n  floatbe: 'Float32',\n  doublele: 'Float64',\n  doublebe: 'Float64',\n};\n\nconst PRIMITIVE_LITTLE_ENDIANS: { [key in PrimitiveTypes]: boolean } = {\n  uint8: false,\n  uint16le: true,\n  uint16be: false,\n  uint32le: true,\n  uint32be: false,\n  int8: false,\n  int16le: true,\n  int16be: false,\n  int32le: true,\n  int32be: false,\n  int64be: false,\n  int64le: true,\n  uint64be: false,\n  uint64le: true,\n  floatle: true,\n  floatbe: false,\n  doublele: true,\n  doublebe: false,\n};\n\nconst CAPITILIZED_TYPE_NAMES: { [key in Types]: string } = {\n  uint8: 'UInt8',\n  uint16le: 'UInt16LE',\n  uint16be: 'UInt16BE',\n  uint32le: 'UInt32LE',\n  uint32be: 'UInt32BE',\n  int8: 'Int8',\n  int16le: 'Int16LE',\n  int16be: 'Int16BE',\n  int32le: 'Int32LE',\n  int32be: 'Int32BE',\n  int64be: 'BigInt64BE',\n  int64le: 'BigInt64LE',\n  uint64be: 'BigUInt64BE',\n  uint64le: 'BigUInt64LE',\n  floatle: 'FloatLE',\n  floatbe: 'FloatBE',\n  doublele: 'DoubleLE',\n  doublebe: 'DoubleBE',\n  bit: 'Bit',\n  string: 'String',\n  buffer: 'Buffer',\n  array: 'Array',\n  choice: 'Choice',\n  meaning: 'Meaning',\n  nest: 'Nest',\n  seek: 'Seek',\n  pointer: 'Pointer',\n  saveOffset: 'SaveOffset',\n  '': '',\n};\n\nexport class Parser {\n  varName = '';\n  type: Types = '';\n  options: ParserOptions = {};\n  next: Parser | null = null;\n  head: Parser | null = null;\n  compiled: Function | null = null;\n  compiledEncode: Function | null = null;\n  endian: Endianess = 'be';\n  constructorFn: Function | null = null;\n  alias: string | null = null;\n  lastOffset:number = 0;\n  smartBufferSize: number;\n  encoderOpts: EncoderOptions;\n\n  constructor(opts?: any) {\n    this.smartBufferSize =\n      opts && typeof opts === 'object' && opts.smartBufferSize\n        ? opts.smartBufferSize\n        : 256;\n    this.encoderOpts = {\n      bitEndianess: false,\n    };\n  }\n\n  static start(opts?: any) {\n    return new Parser(opts);\n  }\n\n  private primitiveGenerateN(type: PrimitiveTypes, ctx: Context) {\n    const typeName = PRIMITIVE_NAMES[type];\n    const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n    ctx.pushCode(\n      `${ctx.generateVariable(\n        this.varName\n      )} = dataView.get${typeName}(offset, ${littleEndian});`\n    );\n    ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n  }\n\n  private primitiveGenerate_encodeN(type: PrimitiveTypes, ctx: Context) {\n    const typeName = CAPITILIZED_TYPE_NAMES[type];\n\n    ctx.pushCode(\n      `smartBuffer.write${typeName}(${ctx.generateVariable(this.varName)});`\n    );\n  }\n\n   primitiveN(\n    type: PrimitiveTypes,\n    varName: string,\n    options?: ParserOptions\n  ) {\n    return this.setNextParser(type as Types, varName, options);\n  }\n\n  private useThisEndian(type: PrimitiveTypesWithoutEndian): PrimitiveTypes {\n    return (type + this.endian.toLowerCase()) as PrimitiveTypes;\n  }\n\n  uint8(varName: string, options?: ParserOptions) {\n    return this.primitiveN('uint8', varName, options);\n  }\n\n  uint16(varName: string, options?: ParserOptions) {\n    return this.primitiveN(this.useThisEndian('uint16'), varName, options);\n  }\n\n  uint16le(varName: string, options?: ParserOptions) {\n    return this.primitiveN('uint16le', varName, options);\n  }\n\n  uint16be(varName: string, options?: ParserOptions) {\n    return this.primitiveN('uint16be', varName, options);\n  }\n\n  uint32(varName: string, options?: ParserOptions) {\n    return this.primitiveN(this.useThisEndian('uint32'), varName, options);\n  }\n\n  uint32le(varName: string, options?: ParserOptions) {\n    return this.primitiveN('uint32le', varName, options);\n  }\n\n  uint32be(varName: string, options?: ParserOptions) {\n    return this.primitiveN('uint32be', varName, options);\n  }\n\n  int8(varName: string, options?: ParserOptions) {\n    return this.primitiveN('int8', varName, options);\n  }\n\n  int16(varName: string, options?: ParserOptions) {\n    return this.primitiveN(this.useThisEndian('int16'), varName, options);\n  }\n\n  int16le(varName: string, options?: ParserOptions) {\n    return this.primitiveN('int16le', varName, options);\n  }\n\n  int16be(varName: string, options?: ParserOptions) {\n    return this.primitiveN('int16be', varName, options);\n  }\n\n  int32(varName: string, options?: ParserOptions) {\n    return this.primitiveN(this.useThisEndian('int32'), varName, options);\n  }\n\n  int32le(varName: string, options?: ParserOptions) {\n    return this.primitiveN('int32le', varName, options);\n  }\n\n  int32be(varName: string, options?: ParserOptions) {\n    return this.primitiveN('int32be', varName, options);\n  }\n\n  private bigIntVersionCheck() {\n    if (!DataView.prototype.getBigInt64)\n      throw new Error('BigInt64 is unsupported in this runtime');\n  }\n\n  int64(varName: string, options?: ParserOptions) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(this.useThisEndian('int64'), varName, options);\n  }\n\n  int64be(varName: string, options?: ParserOptions) {\n    this.bigIntVersionCheck();\n    return this.primitiveN('int64be', varName, options);\n  }\n\n  int64le(varName: string, options?: ParserOptions) {\n    this.bigIntVersionCheck();\n    return this.primitiveN('int64le', varName, options);\n  }\n\n  uint64(varName: string, options?: ParserOptions) {\n    this.bigIntVersionCheck();\n    return this.primitiveN(this.useThisEndian('uint64'), varName, options);\n  }\n\n  uint64be(varName: string, options?: ParserOptions) {\n    this.bigIntVersionCheck();\n    return this.primitiveN('uint64be', varName, options);\n  }\n\n  uint64le(varName: string, options?: ParserOptions) {\n    this.bigIntVersionCheck();\n    return this.primitiveN('uint64le', varName, options);\n  }\n\n  floatle(varName: string, options?: ParserOptions) {\n    return this.primitiveN('floatle', varName, options);\n  }\n\n  floatbe(varName: string, options?: ParserOptions) {\n    return this.primitiveN('floatbe', varName, options);\n  }\n\n  doublele(varName: string, options?: ParserOptions) {\n    return this.primitiveN('doublele', varName, options);\n  }\n\n  doublebe(varName: string, options?: ParserOptions) {\n    return this.primitiveN('doublebe', varName, options);\n  }\n\n  private bitN(size: BitSizes, varName: string, options?: ParserOptions) {\n    if (!options) {\n      options = {};\n    }\n    options.length = size;\n    return this.setNextParser('bit', varName, options);\n  }\n\n  bit1(varName: string, options?: ParserOptions) {\n    return this.bitN(1, varName, options);\n  }\n\n  bit2(varName: string, options?: ParserOptions) {\n    return this.bitN(2, varName, options);\n  }\n\n  bit3(varName: string, options?: ParserOptions) {\n    return this.bitN(3, varName, options);\n  }\n\n  bit4(varName: string, options?: ParserOptions) {\n    return this.bitN(4, varName, options);\n  }\n\n  bit5(varName: string, options?: ParserOptions) {\n    return this.bitN(5, varName, options);\n  }\n\n  bit6(varName: string, options?: ParserOptions) {\n    return this.bitN(6, varName, options);\n  }\n\n  bit7(varName: string, options?: ParserOptions) {\n    return this.bitN(7, varName, options);\n  }\n\n  bit8(varName: string, options?: ParserOptions) {\n    return this.bitN(8, varName, options);\n  }\n\n  bit9(varName: string, options?: ParserOptions) {\n    return this.bitN(9, varName, options);\n  }\n\n  bit10(varName: string, options?: ParserOptions) {\n    return this.bitN(10, varName, options);\n  }\n\n  bit11(varName: string, options?: ParserOptions) {\n    return this.bitN(11, varName, options);\n  }\n\n  bit12(varName: string, options?: ParserOptions) {\n    return this.bitN(12, varName, options);\n  }\n\n  bit13(varName: string, options?: ParserOptions) {\n    return this.bitN(13, varName, options);\n  }\n\n  bit14(varName: string, options?: ParserOptions) {\n    return this.bitN(14, varName, options);\n  }\n\n  bit15(varName: string, options?: ParserOptions) {\n    return this.bitN(15, varName, options);\n  }\n\n  bit16(varName: string, options?: ParserOptions) {\n    return this.bitN(16, varName, options);\n  }\n\n  bit17(varName: string, options?: ParserOptions) {\n    return this.bitN(17, varName, options);\n  }\n\n  bit18(varName: string, options?: ParserOptions) {\n    return this.bitN(18, varName, options);\n  }\n\n  bit19(varName: string, options?: ParserOptions) {\n    return this.bitN(19, varName, options);\n  }\n\n  bit20(varName: string, options?: ParserOptions) {\n    return this.bitN(20, varName, options);\n  }\n\n  bit21(varName: string, options?: ParserOptions) {\n    return this.bitN(21, varName, options);\n  }\n\n  bit22(varName: string, options?: ParserOptions) {\n    return this.bitN(22, varName, options);\n  }\n\n  bit23(varName: string, options?: ParserOptions) {\n    return this.bitN(23, varName, options);\n  }\n\n  bit24(varName: string, options?: ParserOptions) {\n    return this.bitN(24, varName, options);\n  }\n\n  bit25(varName: string, options?: ParserOptions) {\n    return this.bitN(25, varName, options);\n  }\n\n  bit26(varName: string, options?: ParserOptions) {\n    return this.bitN(26, varName, options);\n  }\n\n  bit27(varName: string, options?: ParserOptions) {\n    return this.bitN(27, varName, options);\n  }\n\n  bit28(varName: string, options?: ParserOptions) {\n    return this.bitN(28, varName, options);\n  }\n\n  bit29(varName: string, options?: ParserOptions) {\n    return this.bitN(29, varName, options);\n  }\n\n  bit30(varName: string, options?: ParserOptions) {\n    return this.bitN(30, varName, options);\n  }\n\n  bit31(varName: string, options?: ParserOptions) {\n    return this.bitN(31, varName, options);\n  }\n\n  bit32(varName: string, options?: ParserOptions) {\n    return this.bitN(32, varName, options);\n  }\n\n  namely(alias: string) {\n    aliasRegistry[alias] = this;\n    this.alias = alias;\n    return this;\n  }\n\n  skip(length: number, options?: ParserOptions) {\n    return this.seek(length, options);\n  }\n\n  seek(relOffset: number | ((item: any) => number), options?: ParserOptions) {\n    if (options && options.assert) {\n      throw new Error('assert option on seek is not allowed.');\n    }\n\n    return this.setNextParser('seek', '', {length: relOffset});\n  }\n\n  string(varName: string, options: ParserOptions) {\n    if (!options.zeroTerminated && !options.length && !options.greedy) {\n      throw new Error(\n        'Neither length, zeroTerminated, nor greedy is defined for string.'\n      );\n    }\n    if ((options.zeroTerminated || options.length) && options.greedy) {\n      throw new Error(\n        'greedy is mutually exclusive with length and zeroTerminated for string.'\n      );\n    }\n    if (options.stripNull && !(options.length || options.greedy)) {\n      throw new Error(\n        'Length or greedy must be defined if stripNull is defined.'\n      );\n    }\n    options.encoding = options.encoding || 'utf8';\n\n    return this.setNextParser('string', varName, options);\n  }\n\n  buffer(varName: string, options: ParserOptions) {\n    if (!options.length && !options.readUntil) {\n      throw new Error('Length nor readUntil is defined in buffer parser');\n    }\n\n    return this.setNextParser('buffer', varName, options);\n  }\n\n  array(varName: string, options: ParserOptions) {\n    if (!options.readUntil && !options.length && !options.lengthInBytes) {\n      throw new Error('Length option of array is not defined.');\n    }\n    if (!options.type) {\n      throw new Error('Type option of array is not defined.');\n    }\n    if (\n      typeof options.type === 'string' &&\n      !aliasRegistry[options.type] &&\n      Object.keys(PRIMITIVE_SIZES).indexOf(options.type) < 0\n    ) {\n      throw new Error(\n        `Specified primitive type \"${options.type}\" is not supported.`\n      );\n    }\n\n    return this.setNextParser('array', varName, options);\n  }\n\n  meaning(varName: string , options: ParserOptions){\n    if (!options || !options.tag) {\n      throw new Error('Tag option of array is not defined.');\n    }\n    if (!options || !options.meanings) {\n      throw new Error('Meanings is not defined.');\n    }\n    Object.keys(options.meanings).forEach((keyString: string) => {\n      const key = parseInt(keyString, 10);\n      const value = options!.meanings![key];\n\n      if (isNaN(key)) {\n        throw new Error('Key of meaning must be a number.');\n      }\n\n      if (!value) {\n        throw new Error(`meanings Case ${keyString} of ${varName} is not valid.`);\n      }\n\n      if (\n        typeof value !== 'string'\n      ) {\n        throw new Error(\n          `meanning type \"${value}\" is not supported.`\n        );\n      }\n    });\n    return this.setNextParser('meaning', varName as string, options);\n  }\n\n  choice(varName: string | ParserOptions, options?: ParserOptions) {\n    if (typeof options !== 'object' && typeof varName === 'object') {\n      options = varName;\n      varName = '';\n    }\n\n    if (!options || !options.tag) {\n      throw new Error('Tag option of array is not defined.');\n    }\n    if (!options || !options.choices) {\n      throw new Error('Choices option of array is not defined.');\n    }\n\n    Object.keys(options.choices).forEach((keyString: string) => {\n      const key = parseInt(keyString, 10);\n      const value = options!.choices![key];\n\n      if (isNaN(key)) {\n        throw new Error('Key of choices must be a number.');\n      }\n\n      if (!value) {\n        throw new Error(`Choice Case ${keyString} of ${varName} is not valid.`);\n      }\n\n      if (\n        typeof value === 'string' &&\n        !aliasRegistry[value] &&\n        Object.keys(PRIMITIVE_SIZES).indexOf(value) < 0\n      ) {\n        throw new Error(\n          `Specified primitive type \"${value}\" is not supported.`\n        );\n      }\n    });\n\n    return this.setNextParser('choice', varName as string, options);\n  }\n\n  nest(varName: string | ParserOptions, options: ParserOptions) {\n    if (typeof options !== 'object' && typeof varName === 'object') {\n      options = varName;\n      varName = '';\n    }\n\n    if (!options.type) {\n      throw new Error('Type option of nest is not defined.');\n    }\n    if (!(options.type instanceof Parser) && !aliasRegistry[options.type]) {\n      throw new Error('Type option of nest must be a Parser object.');\n    }\n    if (!(options.type instanceof Parser) && !varName) {\n      throw new Error(\n        'options.type must be a object if variable name is omitted.'\n      );\n    }\n\n    return this.setNextParser('nest', varName as string, options);\n  }\n\n  pointer(varName: string, options: ParserOptions) {\n    if (!options.offset) {\n      throw new Error('Offset option of pointer is not defined.');\n    }\n\n    if (!options.type) {\n      throw new Error('Type option of pointer is not defined.');\n    } else if (typeof options.type === 'string') {\n      if (\n        Object.keys(PRIMITIVE_SIZES).indexOf(options.type) < 0 &&\n        !aliasRegistry[options.type]\n      ) {\n        throw new Error(\n          'Specified type \"' + options.type + '\" is not supported.'\n        );\n      }\n    } else if (options.type instanceof Parser) {\n    } else {\n      throw new Error(\n        'Type option of pointer must be a string or a Parser object.'\n      );\n    }\n\n    return this.setNextParser('pointer', varName, options);\n  }\n\n  saveOffset(varName: string, options?: ParserOptions) {\n    return this.setNextParser('saveOffset', varName, options);\n  }\n\n  endianess(endianess: 'little' | 'big') {\n    switch (endianess.toLowerCase()) {\n      case 'little':\n        this.endian = 'le';\n        break;\n      case 'big':\n        this.endian = 'be';\n        break;\n      default:\n        throw new Error(`Invalid endianess: ${endianess}`);\n    }\n\n    return this;\n  }\n\n  encoderSetOptions(opts: EncoderOptions) {\n    Object.assign(this.encoderOpts, opts);\n    return this;\n  }\n\n  create(constructorFn: Function) {\n    if (!(constructorFn instanceof Function)) {\n      throw new Error('Constructor must be a Function object.');\n    }\n\n    this.constructorFn = constructorFn;\n\n    return this;\n  }\n\n  private getContext(importPath?: string) {\n    const ctx = new Context(importPath);\n\n    ctx.pushCode(\n      'var dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);'\n    );\n\n    if (!this.alias) {\n      this.addRawCode(ctx);\n      // ctx.pushCode(`return {result:vars, offset:offset};`);\n\n    } else {\n      this.addAliasedCode(ctx);\n      // ctx.pushCode(`return ${FUNCTION_PREFIX + this.alias}(0).result;`);\n      ctx.pushCode(`return {result:${FUNCTION_PREFIX + this.alias}(0).result, offset:${FUNCTION_PREFIX + this.alias}(0).offset};`);\n\n    }\n\n    return ctx;\n  }\n\n  getCode() {\n    return this.getContext().code;\n  }\n\n  private getContextEncode(importPath?: string) {\n    const ctx = new Context(importPath);\n\n    ctx.pushCode('if (!obj || typeof obj !== \"object\") {');\n    ctx.generateError('\"argument obj is not an object\"');\n    ctx.pushCode('}');\n\n    if (!this.alias) {\n      this.addRawCodeEncode(ctx);\n    } else {\n      this.addAliasedCodeEncode(ctx);\n      ctx.pushCode(`return ${FUNCTION_ENCODE_PREFIX + this.alias}(obj);`);\n    }\n\n    return ctx;\n  }\n\n  getCodeEncode() {\n    return this.getContextEncode().code;\n  }\n\n  private addRawCode(ctx: Context) {\n    ctx.pushCode('var offset = 0;');\n\n    if (this.constructorFn) {\n      ctx.pushCode('var vars = new constructorFn();');\n    } else {\n      ctx.pushCode('var vars = {};');\n    }\n\n    this.generate(ctx);\n\n    this.resolveReferences(ctx);\n\n    ctx.pushCode('return {vars, offset};');\n  }\n\n  private addRawCodeEncode(ctx: Context) {\n    ctx.pushCode('var vars = obj;');\n    ctx.pushCode(\n      `var smartBuffer = SmartBuffer.fromOptions({size: ${this.smartBufferSize}, encoding: \"utf8\"});`\n    );\n\n    this.generateEncode(ctx);\n\n    this.resolveReferences(ctx, 'encode');\n\n    ctx.pushCode('return {vars:smartBuffer.toBuffer(), offset};');\n  }\n\n  private addAliasedCode(ctx: Context) {\n    ctx.pushCode(`function ${FUNCTION_PREFIX + this.alias}(offset) {`);\n\n    if (this.constructorFn) {\n      ctx.pushCode('var vars = new constructorFn();');\n    } else {\n      ctx.pushCode('var vars = {};');\n    }\n\n    this.generate(ctx);\n\n    ctx.markResolved(this.alias!);\n    this.resolveReferences(ctx);\n\n    ctx.pushCode('return { offset: offset, result: vars };');\n    ctx.pushCode('}');\n\n    return ctx;\n  }\n\n  private addAliasedCodeEncode(ctx: Context) {\n    ctx.pushCode(`function ${FUNCTION_ENCODE_PREFIX + this.alias}(obj) {`);\n\n    ctx.pushCode('var vars = obj;');\n    ctx.pushCode(\n      `var smartBuffer = SmartBuffer.fromOptions({size: ${this.smartBufferSize}, encoding: \"utf8\"});`\n    );\n\n    this.generateEncode(ctx);\n\n    ctx.markResolved(this.alias!);\n    this.resolveReferences(ctx, 'encode');\n\n    ctx.pushCode('return smartBuffer.toBuffer();');\n    ctx.pushCode('}');\n\n    return ctx;\n  }\n\n  private resolveReferences(ctx: Context, encode?: string) {\n    const references = ctx.getUnresolvedReferences();\n    ctx.markRequested(references);\n    references.forEach(alias => {\n      const parser = aliasRegistry[alias];\n      if (encode) {\n        parser.addAliasedCodeEncode(ctx);\n      } else {\n        parser.addAliasedCode(ctx);\n      }\n    });\n  }\n\n  compile() {\n    const importPath = 'imports';\n    const ctx = this.getContext(importPath);\n    let result = this.compiled = new Function(\n      importPath,\n      'TextDecoder',\n      `return function (buffer, constructorFn) { ${ctx.code} };`\n    )(\n      ctx.imports,\n      typeof TextDecoder === 'undefined'\n        ? require('util').TextDecoder\n        : TextDecoder\n    );\n    this.lastOffset = result.offset;\n    return result.vars;\n  }\n\n  compileEncode() {\n    const importPath = 'imports';\n    const ctx = this.getContextEncode(importPath);\n    this.compiledEncode = new Function(\n      importPath,\n      'TextDecoder',\n      'SmartBuffer',\n      `return function (obj) { ${ctx.code} };`\n    )(\n      ctx.imports,\n      typeof TextDecoder === 'undefined'\n        ? require('util').TextDecoder\n        : TextDecoder,\n      typeof SmartBuffer === 'undefined'\n        ? require('smart-buffer').SmartBuffer\n        : SmartBuffer\n    );\n  }\n\n  sizeOf(): number {\n    let size = NaN;\n\n    if (Object.keys(PRIMITIVE_SIZES).indexOf(this.type) >= 0) {\n      size = PRIMITIVE_SIZES[this.type as PrimitiveTypes];\n\n      // if this is a fixed length string\n    } else if (\n      this.type === 'string' &&\n      typeof this.options.length === 'number'\n    ) {\n      size = this.options.length;\n\n      // if this is a fixed length buffer\n    } else if (\n      this.type === 'buffer' &&\n      typeof this.options.length === 'number'\n    ) {\n      size = this.options.length;\n\n      // if this is a fixed length array\n    } else if (\n      this.type === 'array' &&\n      typeof this.options.length === 'number'\n    ) {\n      let elementSize = NaN;\n      if (typeof this.options.type === 'string') {\n        elementSize = PRIMITIVE_SIZES[this.options.type as PrimitiveTypes];\n      } else if (this.options.type instanceof Parser) {\n        elementSize = this.options.type.sizeOf();\n      }\n      size = this.options.length * elementSize;\n\n      // if this a skip\n    } else if (this.type === 'seek') {\n      size = this.options.length as number;\n\n      // if this is a nested parser\n    } else if (this.type === 'nest') {\n      size = (this.options.type as Parser).sizeOf();\n    } else if (!this.type) {\n      size = 0;\n    }\n\n    if (this.next) {\n      size += this.next.sizeOf();\n    }\n\n    return size;\n  }\n\n\n\n  // Follow the parser chain till the root and start parsing from there\n  parse(buffer: Buffer | Uint8Array) {\n    if (!this.compiled) {\n      this.compile();\n    }\n\n    let result =  this.compiled!(buffer, this.constructorFn);\n    return result.vars;\n  }\n\n  // Follow the parser chain till the root and start encoding from there\n  encode(obj: any) {\n    if (!this.compiledEncode) {\n      this.compileEncode();\n    }\n\n    return this.compiledEncode!(obj);\n  }\n\n  getLastOffset(){\n    return this.lastOffset;\n  }\n\n  private setNextParser(type: Types, varName?: string, options?: ParserOptions) {\n    const parser = new Parser();\n\n    parser.type = type;\n    parser.varName = varName || '';\n    parser.options = options || parser.options;\n    parser.endian = this.endian;\n    parser.encoderOpts = this.encoderOpts;\n\n    if (this.head) {\n      this.head.next = parser;\n    } else {\n      this.next = parser;\n    }\n    this.head = parser;\n\n    return this;\n  }\n\n  // Call code generator for this parser\n  private generate(ctx: Context) {\n    if (this.type) {\n      switch (this.type) {\n        case 'uint8':\n        case 'uint16le':\n        case 'uint16be':\n        case 'uint32le':\n        case 'uint32be':\n        case 'int8':\n        case 'int16le':\n        case 'int16be':\n        case 'int32le':\n        case 'int32be':\n        case 'int64be':\n        case 'int64le':\n        case 'uint64be':\n        case 'uint64le':\n        case 'floatle':\n        case 'floatbe':\n        case 'doublele':\n        case 'doublebe':\n          this.primitiveGenerateN(this.type, ctx);\n          break;\n        case 'bit':\n          this.generateBit(ctx);\n          break;\n        case 'string':\n          this.generateString(ctx);\n          break;\n        case 'buffer':\n          this.generateBuffer(ctx);\n          break;\n        case 'seek':\n          this.generateSeek(ctx);\n          break;\n        case 'nest':\n          this.generateNest(ctx);\n          break;\n        case 'array':\n          this.generateArray(ctx);\n          break;\n        case 'choice':\n          this.generateChoice(ctx);\n          break;\n        case 'meaning':\n          this.generateMeaning(ctx);\n          break;\n        case 'pointer':\n          this.generatePointer(ctx);\n          break;\n        case 'saveOffset':\n          this.generateSaveOffset(ctx);\n          break;\n      }\n      this.generateAssert(ctx);\n    }\n\n    const varName = ctx.generateVariable(this.varName);\n    if (this.options.formatter) {\n      this.generateFormatter(ctx, varName, this.options.formatter);\n    }\n\n    return this.generateNext(ctx);\n  }\n\n  generateEncode(ctx: Context) {\n    const savVarName = ctx.generateTmpVariable();\n    const varName = ctx.generateVariable(this.varName);\n\n    // Transform with the possibly provided encoder before encoding\n    if (this.options.encoder) {\n      ctx.pushCode(`var ${savVarName} = ${varName}`);\n      this.generateEncoder(ctx, varName, this.options.encoder);\n    }\n\n    if (this.type) {\n      switch (this.type) {\n        case 'uint8':\n        case 'uint16le':\n        case 'uint16be':\n        case 'uint32le':\n        case 'uint32be':\n        case 'int8':\n        case 'int16le':\n        case 'int16be':\n        case 'int32le':\n        case 'int32be':\n        case 'int64be':\n        case 'int64le':\n        case 'uint64be':\n        case 'uint64le':\n        case 'floatle':\n        case 'floatbe':\n        case 'doublele':\n        case 'doublebe':\n          this.primitiveGenerate_encodeN(this.type, ctx);\n          break;\n        case 'bit':\n          this.generate_encodeBit(ctx);\n          break;\n        case 'string':\n          this.generate_encodeString(ctx);\n          break;\n        case 'buffer':\n          this.generate_encodeBuffer(ctx);\n          break;\n        case 'seek':\n          this.generate_encodeSeek(ctx);\n          break;\n        case 'nest':\n          this.generate_encodeNest(ctx);\n          break;\n        case 'array':\n          this.generate_encodeArray(ctx);\n          break;\n        case 'choice':\n          this.generate_encodeChoice(ctx);\n          break;\n        case 'meaning':\n          this.generate_encodeMeaning(ctx);\n          break;\n        case 'pointer':\n          this.generate_encodePointer(ctx);\n          break;\n        case 'saveOffset':\n          this.generate_encodeSaveOffset(ctx);\n          break;\n      }\n      this.generateAssert(ctx);\n    }\n\n    if (this.options.encoder) {\n      // Restore varName after encoder transformation so that next parsers will\n      // have access to original field value (but not nested ones)\n      ctx.pushCode(`${varName} = ${savVarName};`);\n    }\n\n    return this.generateEncodeNext(ctx);\n  }\n\n  private generateAssert(ctx: Context) {\n    if (!this.options.assert) {\n      return;\n    }\n\n    const varName = ctx.generateVariable(this.varName);\n\n    switch (typeof this.options.assert) {\n      case 'function':\n        const func = ctx.addImport(this.options.assert);\n        ctx.pushCode(`if (!${func}.call(vars, ${varName})) {`);\n        break;\n      case 'number':\n        ctx.pushCode(`if (${this.options.assert} !== ${varName}) {`);\n        break;\n      case 'string':\n        ctx.pushCode(`if (\"${this.options.assert}\" !== ${varName}) {`);\n        break;\n      default:\n        throw new Error(\n          'Assert option supports only strings, numbers and assert functions.'\n        );\n    }\n    ctx.generateError(\n      `\"Assert error: ${varName} is \" + ${this.options.assert}`\n    );\n    ctx.pushCode('}');\n  }\n\n  // Recursively call code generators and append results\n  private generateNext(ctx: Context) {\n    if (this.next) {\n      ctx = this.next.generate(ctx);\n    }\n\n    return ctx;\n  }\n\n  // Recursively call code generators and append results\n  private generateEncodeNext(ctx: Context) {\n    if (this.next) {\n      ctx = this.next.generateEncode(ctx);\n    }\n\n    return ctx;\n  }\n\n  private generateBit(ctx: Context) {\n    // TODO find better method to handle nested bit fields\n    const parser = JSON.parse(JSON.stringify(this));\n    parser.varName = ctx.generateVariable(parser.varName);\n    ctx.bitFields.push(parser);\n\n    if (\n      !this.next ||\n      (this.next && ['bit', 'nest'].indexOf(this.next.type) < 0)\n    ) {\n      let sum = 0;\n      ctx.bitFields.forEach(parser => (sum += parser.options.length as number));\n\n      const val = ctx.generateTmpVariable();\n\n      if (sum <= 8) {\n        ctx.pushCode(`var ${val} = dataView.getUint8(offset);`);\n        sum = 8;\n      } else if (sum <= 16) {\n        ctx.pushCode(`var ${val} = dataView.getUint16(offset);`);\n        sum = 16;\n      } else if (sum <= 24) {\n        const val1 = ctx.generateTmpVariable();\n        const val2 = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${val1} = dataView.getUint16(offset);`);\n        ctx.pushCode(`var ${val2} = dataView.getUint8(offset + 2);`);\n        ctx.pushCode(`var ${val} = (${val1} << 8) | ${val2};`);\n        sum = 24;\n      } else if (sum <= 32) {\n        ctx.pushCode(`var ${val} = dataView.getUint32(offset);`);\n        sum = 32;\n      } else {\n        throw new Error(\n          'Currently, bit field sequence longer than 4-bytes is not supported.'\n        );\n      }\n      ctx.pushCode(`offset += ${sum / 8};`);\n\n      let bitOffset = 0;\n      const isBigEndian = this.endian === 'be';\n\n      ctx.bitFields.forEach(parser => {\n        const length = parser.options.length as number;\n        const offset = isBigEndian ? sum - bitOffset - length : bitOffset;\n        const mask = (1 << length) - 1;\n\n        ctx.pushCode(`${parser.varName} = ${val} >> ${offset} & ${mask};`);\n        bitOffset += length;\n      });\n\n      ctx.bitFields = [];\n    }\n  }\n\n  private generate_encodeBit(ctx: Context) {\n    // TODO find better method to handle nested bit fields\n    const parser = JSON.parse(JSON.stringify(this));\n    parser.varName = ctx.generateVariable(parser.varName);\n    ctx.bitFields.push(parser);\n\n    if (\n      !this.next ||\n      (this.next && ['bit', 'nest'].indexOf(this.next.type) < 0)\n    ) {\n      let sum = 0;\n      ctx.bitFields.forEach(parser => {\n        sum += parser.options.length as number;\n      });\n\n      if (sum <= 8) {\n        sum = 8;\n      } else if (sum <= 16) {\n        sum = 16;\n      } else if (sum <= 24) {\n        sum = 24;\n      } else if (sum <= 32) {\n        sum = 32;\n      } else {\n        throw new Error(\n          'Currently, bit field sequences longer than 4-bytes is not supported.'\n        );\n      }\n\n      const isBitLittleEndian =\n        this.endian === 'le' && this.encoderOpts.bitEndianess;\n      const tmpVal = ctx.generateTmpVariable();\n      const boundVal = ctx.generateTmpVariable();\n      ctx.pushCode(`var ${tmpVal} = 0;`);\n      ctx.pushCode(`var ${boundVal} = 0;`);\n      let bitOffset = 0;\n      ctx.bitFields.forEach(parser => {\n        ctx.pushCode(\n          `${boundVal} = (${parser.varName} & ${(1 <<\n            (parser.options.length as number)) -\n          1});`\n        );\n        ctx.pushCode(\n          `${tmpVal} |= (${boundVal} << ${\n            isBitLittleEndian\n              ? bitOffset\n              : sum - (parser.options.length as number) - bitOffset\n          });`\n        );\n        ctx.pushCode(`${tmpVal} = ${tmpVal} >>> 0;`);\n        bitOffset += parser.options.length as number;\n      });\n      if (sum == 8) {\n        ctx.pushCode(`smartBuffer.writeUInt8(${tmpVal});`);\n      } else if (sum == 16) {\n        ctx.pushCode(`smartBuffer.writeUInt16BE(${tmpVal});`);\n      } else if (sum == 24) {\n        const val1 = ctx.generateTmpVariable();\n        const val2 = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${val1} = (${tmpVal} >>> 8);`);\n        ctx.pushCode(`var ${val2} = (${tmpVal} & 0x0ff);`);\n        ctx.pushCode(`smartBuffer.writeUInt16BE(${val1});`);\n        ctx.pushCode(`smartBuffer.writeUInt8(${val2});`);\n      } else if (sum == 32) {\n        ctx.pushCode(`smartBuffer.writeUInt32BE(${tmpVal});`);\n      }\n\n      ctx.bitFields = [];\n    }\n  }\n\n  private generateSeek(ctx: Context) {\n    const length = ctx.generateOption(this.options.length);\n    ctx.pushCode(`offset += ${length};`);\n  }\n\n  private generate_encodeSeek(ctx: Context) {\n    const length = ctx.generateOption(this.options.length);\n    ctx.pushCode(`smartBuffer.writeBuffer(Buffer.alloc(${length}));`);\n  }\n\n  private generateString(ctx: Context) {\n    const name = ctx.generateVariable(this.varName);\n    const start = ctx.generateTmpVariable();\n    const encoding = this.options.encoding;\n    const isHex = encoding!.toLowerCase() === 'hex';\n    const toHex = 'b => b.toString(16).padStart(2, \"0\")';\n\n    if (this.options.length && this.options.zeroTerminated) {\n      const len = this.options.length;\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(\n        `while(dataView.getUint8(offset++) !== 0 && offset - ${start}  < ${len});`\n      );\n      //const end = `offset - ${start} < ${len} ? offset - 1 : offset`;\n      const end = 'dataView.getUint8(offset -1) == 0 ? offset - 1 : offset';\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(new Uint8Array(buffer.subarray(${start}, ${end})), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, ${end}));`\n      );\n    } else if (this.options.length) {\n      const len = ctx.generateOption(this.options.length);\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(offset, offset + ${len}), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(offset, offset + ${len}));`\n      );\n      ctx.pushCode(`offset += ${len};`);\n    } else if (this.options.zeroTerminated) {\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode('while(dataView.getUint8(offset++) !== 0);');\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(${start}, offset - 1)), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset - 1));`\n      );\n    } else if (this.options.greedy) {\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode('while(buffer.length > offset++);');\n      ctx.pushCode(\n        isHex\n          ? `${name} = Array.from(buffer.subarray(${start}, offset)), ${toHex}).join('');`\n          : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset));`\n      );\n    }\n    if (this.options.stripNull) {\n      ctx.pushCode(`${name} = ${name}.replace(/\\\\x00+$/g, '')`);\n    }\n    if (this.options.trim) {\n      ctx.pushCode(`${name} = ${name}.trim()`);\n    }\n  }\n\n  private generate_encodeString(ctx: Context) {\n    const name = ctx.generateVariable(this.varName);\n\n    // Get the length of string to encode\n    if (this.options.length) {\n      const optLength = ctx.generateOption(this.options.length);\n      // Encode the string to a temporary buffer\n      const tmpBuf = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tmpBuf} = Buffer.from(${name}, \"${this.options.encoding}\");`\n      );\n      // Truncate the buffer to specified (Bytes) length\n      ctx.pushCode(`${tmpBuf} = ${tmpBuf}.slice(0, ${optLength});`);\n      // Compute padding length\n      const padLen = ctx.generateTmpVariable();\n      ctx.pushCode(`${padLen} = ${optLength} - ${tmpBuf}.length;`);\n      if (this.options.zeroTerminated) {\n        ctx.pushCode(`smartBuffer.writeBuffer(${tmpBuf});`);\n        ctx.pushCode(`if (${padLen} > 0) { smartBuffer.writeUInt8(0x00); }`);\n      } else {\n        const padCharVar = ctx.generateTmpVariable();\n        let padChar = this.options.stripNull ? '\\u0000' : ' ';\n        if (this.options.padd && typeof this.options.padd === 'string') {\n          const code = this.options.padd.charCodeAt(0);\n          if (code < 0x80) {\n            padChar = String.fromCharCode(code);\n          }\n        }\n        ctx.pushCode(`${padCharVar} = \"${padChar}\";`);\n        if (this.options.padding === 'left') {\n          // Add heading padding spaces\n          ctx.pushCode(\n            `if (${padLen} > 0) {smartBuffer.writeString(${padCharVar}.repeat(${padLen}));}`\n          );\n        }\n        // Copy the temporary string buffer to current smartBuffer\n        ctx.pushCode(`smartBuffer.writeBuffer(${tmpBuf});`);\n        if (this.options.padding !== 'left') {\n          // Add trailing padding spaces\n          ctx.pushCode(\n            `if (${padLen} > 0) {smartBuffer.writeString(${padCharVar}.repeat(${padLen}));}`\n          );\n        }\n      }\n    } else {\n      ctx.pushCode(\n        `smartBuffer.writeString(${name}, \"${this.options.encoding}\");`\n      );\n      if (this.options.zeroTerminated) {\n        ctx.pushCode('smartBuffer.writeUInt8(0x00);');\n      }\n    }\n  }\n\n  private generateBuffer(ctx: Context) {\n    const varName = ctx.generateVariable(this.varName);\n\n    if (typeof this.options.readUntil === 'function') {\n      const pred = this.options.readUntil;\n      const start = ctx.generateTmpVariable();\n      const cur = ctx.generateTmpVariable();\n\n      ctx.pushCode(`var ${start} = offset;`);\n      ctx.pushCode(`var ${cur} = 0;`);\n      ctx.pushCode(`while (offset < buffer.length) {`);\n      ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n      const func = ctx.addImport(pred);\n      ctx.pushCode(\n        `if (${func}.call(this, ${cur}, buffer.subarray(offset), offset, dataView.byteLength)) break;`\n      );\n      ctx.pushCode(`offset += 1;`);\n      ctx.pushCode(`}`);\n      ctx.pushCode(`${varName} = buffer.subarray(${start}, offset);`);\n    } else if (this.options.readUntil === 'eof') {\n      ctx.pushCode(`${varName} = buffer.subarray(offset);`);\n      ctx.pushCode(\"offset = buffer.length;\");\n    } else {\n      const len = ctx.generateOption(this.options.length);\n\n      ctx.pushCode(`${varName} = buffer.subarray(offset, offset + ${len});`);\n      ctx.pushCode(`offset += ${len};`);\n    }\n\n    if (this.options.clone) {\n      ctx.pushCode(`${varName} = buffer.constructor.from(${varName});`);\n    }\n  }\n\n  private generate_encodeBuffer(ctx: Context) {\n    ctx.pushCode(\n      `smartBuffer.writeBuffer(${ctx.generateVariable(this.varName)});`\n    );\n  }\n\n  private generateArray(ctx: Context) {\n    const length = ctx.generateOption(this.options.length);\n    const lengthInBytes = ctx.generateOption(this.options.lengthInBytes);\n    const type = this.options.type;\n    const counter = ctx.generateTmpVariable();\n    const lhs = ctx.generateVariable(this.varName);\n    const item = ctx.generateTmpVariable();\n    const key = this.options.key;\n    const isHash = typeof key === 'string';\n\n    if (isHash) {\n      ctx.pushCode(`${lhs} = {};`);\n    } else {\n      ctx.pushCode(`${lhs} = [];`);\n    }\n    if (typeof this.options.readUntil === 'function') {\n      ctx.pushCode('do {');\n    } else if (this.options.readUntil === 'eof') {\n      ctx.pushCode(\n        `for (var ${counter} = 0; offset < buffer.length; ${counter}++) {`\n      );\n    } else if (lengthInBytes !== undefined) {\n      ctx.pushCode(\n        `for (var ${counter} = offset + ${lengthInBytes}; offset < ${counter}; ) {`\n      );\n    } else {\n      ctx.pushCode(\n        `for (var ${counter} = ${length}; ${counter} > 0; ${counter}--) {`\n      );\n    }\n\n    if (typeof type === 'string') {\n      if (!aliasRegistry[type]) {\n        const typeName = PRIMITIVE_NAMES[type as PrimitiveTypes];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type as PrimitiveTypes];\n        ctx.pushCode(\n          `var ${item} = dataView.get${typeName}(offset, ${littleEndian});`\n        );\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type as PrimitiveTypes]};`);\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset);`);\n        ctx.pushCode(\n          `var ${item} = ${tempVar}.vars; offset = ${tempVar}.offset;`\n        );\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushCode(`var ${item} = {};`);\n\n      ctx.pushScope(item);\n      type.generate(ctx);\n      ctx.popScope();\n    }\n\n    if (isHash) {\n      ctx.pushCode(`${lhs}[${item}.${key}] = ${item};`);\n    } else {\n      ctx.pushCode(`${lhs}.push(${item});`);\n    }\n\n    ctx.pushCode('}');\n\n    if (typeof this.options.readUntil === 'function') {\n      const pred = this.options.readUntil;\n      const func = ctx.addImport(pred);\n      ctx.pushCode(\n        `while (!${func}.call(this, ${item}, buffer.subarray(offset), offset, dataView.byteLength));`\n      );\n    }\n  }\n\n  private generate_encodeArray(ctx: Context) {\n    const length = ctx.generateOption(this.options.length);\n    const lengthInBytes = ctx.generateOption(this.options.lengthInBytes);\n    const type = this.options.type;\n    const name = ctx.generateVariable(this.varName);\n    const item = ctx.generateTmpVariable();\n    const itemCounter = ctx.generateTmpVariable();\n    const maxItems = ctx.generateTmpVariable();\n    const isHash = typeof this.options.key === 'string';\n\n    if (isHash) {\n      ctx.generateError('\"Encoding associative array not supported\"');\n    }\n\n    ctx.pushCode(`var ${maxItems} = 0;`);\n\n    // Get default array length (if defined)\n    ctx.pushCode(`if(${name}) {${maxItems} = ${name}.length;}`);\n\n    // Compute the desired count of array items to encode (min of array size\n    // and length option)\n    if (length !== undefined) {\n      ctx.pushCode(\n        `${maxItems} = ${maxItems} > ${length} ? ${length} : ${maxItems}`\n      );\n    }\n\n    // Save current encoding smartBuffer and allocate a new one\n    const savSmartBuffer = ctx.generateTmpVariable();\n    ctx.pushCode(\n      `var ${savSmartBuffer} = smartBuffer; ` +\n      `smartBuffer = SmartBuffer.fromOptions({size: ${this.smartBufferSize}, encoding: \"utf8\"});`\n    );\n\n    ctx.pushCode(`if(${maxItems} > 0) {`);\n\n    ctx.pushCode(`var ${itemCounter} = 0;`);\n    if (\n      typeof this.options.encodeUntil === 'function' ||\n      typeof this.options.readUntil === 'function'\n    ) {\n      ctx.pushCode('do {');\n    } else {\n      ctx.pushCode(`for ( ; ${itemCounter} < ${maxItems}; ) {`);\n    }\n\n    ctx.pushCode(`var ${item} = ${name}[${itemCounter}];`);\n    ctx.pushCode(`${itemCounter}++;`);\n\n    if (typeof type === 'string') {\n      if (!aliasRegistry[type]) {\n        ctx.pushCode(\n          `smartBuffer.write${\n            CAPITILIZED_TYPE_NAMES[type as PrimitiveTypes]\n          }(${item});`\n        );\n      } else {\n        ctx.pushCode(\n          `smartBuffer.writeBuffer(${FUNCTION_ENCODE_PREFIX + type}(${item}));`\n        );\n        if (type !== this.alias) {\n          ctx.addReference(type);\n        }\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushScope(item);\n      type.generateEncode(ctx);\n      ctx.popScope();\n    }\n\n    ctx.pushCode('}'); // End of 'do {' or 'for (...) {'\n\n    if (typeof this.options.encodeUntil === 'function') {\n      ctx.pushCode(\n        ` while (${itemCounter} < ${maxItems} && !(${this.options.encodeUntil}).call(this, ${item}, vars));`\n      );\n    } else if (typeof this.options.readUntil === 'function') {\n      ctx.pushCode(\n        ` while (${itemCounter} < ${maxItems} && !(${this.options.readUntil}).call(this, ${item}, ${savSmartBuffer}.toBuffer()));`\n      );\n    }\n    ctx.pushCode('}'); // End of 'if(...) {'\n\n    const tmpBuffer = ctx.generateTmpVariable();\n    ctx.pushCode(`var ${tmpBuffer} = smartBuffer.toBuffer()`);\n    if (lengthInBytes !== undefined) {\n      // Truncate the tmpBuffer so that it will respect the lengthInBytes option\n      ctx.pushCode(`${tmpBuffer} = ${tmpBuffer}.slice(0, ${lengthInBytes});`);\n    }\n    // Copy tmp Buffer to saved smartBuffer\n    ctx.pushCode(`${savSmartBuffer}.writeBuffer(${tmpBuffer});`);\n    // Restore current smartBuffer\n    ctx.pushCode(`smartBuffer = ${savSmartBuffer};`);\n  }\n\n  private generateChoiceCase(\n    ctx: Context,\n    varName: string,\n    type: string | Parser\n  ) {\n    if (typeof type === 'string') {\n      const varName = ctx.generateVariable(this.varName);\n      if (!aliasRegistry[type]) {\n        const typeName = PRIMITIVE_NAMES[type as PrimitiveTypes];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type as PrimitiveTypes];\n        ctx.pushCode(\n          `${varName} = dataView.get${typeName}(offset, ${littleEndian});`\n        );\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type as PrimitiveTypes]}`);\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset);`);\n        ctx.pushCode(\n          `${varName} = ${tempVar}.vars; offset = ${tempVar}.offset;`\n        );\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushPath(varName);\n      type.generate(ctx);\n      ctx.popPath(varName);\n    }\n  }\n\n  private generate_encodeChoiceCase(\n    ctx: Context,\n    varName: string,\n    type: string | Parser\n  ) {\n    if (typeof type === 'string') {\n      if (!aliasRegistry[type]) {\n        ctx.pushCode(\n          `smartBuffer.write${\n            CAPITILIZED_TYPE_NAMES[type as Types]\n          }(${ctx.generateVariable(this.varName)});`\n        );\n      } else {\n        const tempVar = ctx.generateTmpVariable();\n        ctx.pushCode(\n          `var ${tempVar} = ${FUNCTION_ENCODE_PREFIX +\n          type}(${ctx.generateVariable(this.varName)});`\n        );\n        ctx.pushCode(`smartBuffer.writeBuffer(${tempVar});`);\n        if (type !== this.alias) ctx.addReference(type);\n      }\n    } else if (type instanceof Parser) {\n      ctx.pushPath(varName);\n      type.generateEncode(ctx);\n      ctx.popPath(varName);\n    }\n  }\n\n  private generateChoice(ctx: Context) {\n    const tag = ctx.generateOption(this.options.tag);\n    if (this.varName) {\n      ctx.pushCode(`${ctx.generateVariable(this.varName)} = {};`);\n    }\n    ctx.pushCode(`switch(${tag}) {`);\n    Object.keys(this.options.choices!).forEach(tag => {\n      const type = this.options.choices![parseInt(tag, 10)];\n\n      ctx.pushCode(`case ${tag}:`);\n      this.generateChoiceCase(ctx, this.varName, type);\n      ctx.pushCode('break;');\n    });\n    ctx.pushCode('default:');\n    if (this.options.defaultChoice) {\n      this.generateChoiceCase(ctx, this.varName, this.options.defaultChoice);\n    } else {\n      ctx.generateError(`\"Met undefined tag value \" + ${tag} + \" at choice\"`);\n    }\n    ctx.pushCode('}');\n  }\n\n  private generateMeaning(ctx: Context) {\n    const tag = ctx.generateOption(this.options.tag);\n    if (this.varName) {\n      ctx.pushCode(`${ctx.generateVariable(this.varName)} = ${tag};`);\n    }\n    ctx.pushCode(`switch(${tag}) {`);\n    Object.keys(this.options.meanings!).forEach(tag => {\n      const value = this.options.meanings![parseInt(tag, 10)];\n\n      ctx.pushCode(`case ${tag}:`);\n      ctx.pushCode(`${ctx.generateVariable(this.varName)} = \"${value}\";`);\n      ctx.pushCode('break;');\n    });\n    ctx.pushCode('default:');\n    ctx.pushCode(`${ctx.generateVariable(this.varName)} = \"unknown\";`);\n    ctx.pushCode('}');\n  }\n\n  private generate_encodeChoice(ctx: Context) {\n    const tag = ctx.generateOption(this.options.tag);\n    ctx.pushCode(`switch(${tag}) {`);\n    Object.keys(this.options.choices!).forEach(tag => {\n      const type = this.options.choices![parseInt(tag, 10)];\n\n      ctx.pushCode(`case ${tag}:`);\n      this.generate_encodeChoiceCase(ctx, this.varName, type);\n      ctx.pushCode('break;');\n    }, this);\n    ctx.pushCode('default:');\n    if (this.options.defaultChoice) {\n      this.generate_encodeChoiceCase(\n        ctx,\n        this.varName,\n        this.options.defaultChoice\n      );\n    } else {\n      ctx.generateError(`\"Met undefined tag value \" + ${tag} + \" at choice\"`);\n    }\n    ctx.pushCode('}');\n  }\n\n\n  private generate_encodeMeaning(ctx: Context) {\n\n    ctx.pushCode(`throw new Error(\"unsuported generate_encodeMeaning\" )`);\n  }\n\n  private generateNest(ctx: Context) {\n    const nestVar = ctx.generateVariable(this.varName);\n\n    if (this.options.type instanceof Parser) {\n      if (this.varName) {\n        ctx.pushCode(`${nestVar} = {};`);\n      }\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n    } else if (aliasRegistry[this.options.type!]) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset);`\n      );\n      ctx.pushCode(\n        `${nestVar} = ${tempVar}.vars; offset = ${tempVar}.offset;`\n      );\n      if (this.options.type !== this.alias) ctx.addReference(this.options.type!);\n    }\n  }\n\n  private generate_encodeNest(ctx: Context) {\n    const nestVar = ctx.generateVariable(this.varName);\n\n    if (this.options.type instanceof Parser) {\n      ctx.pushPath(this.varName);\n      this.options.type.generateEncode(ctx);\n      ctx.popPath(this.varName);\n    } else if (aliasRegistry[this.options.type!]) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tempVar} = ${FUNCTION_ENCODE_PREFIX +\n        this.options.type}(${nestVar});`\n      );\n      ctx.pushCode(`smartBuffer.writeBuffer(${tempVar});`);\n      if (this.options.type !== this.alias) {\n        ctx.addReference(this.options.type!);\n      }\n    }\n  }\n\n  private generateFormatter(\n    ctx: Context,\n    varName: string,\n    formatter: Function\n  ) {\n    if (typeof formatter === 'function') {\n      const func = ctx.addImport(formatter);\n      ctx.pushCode(`${varName} = ${func}.call(this, ${varName});`);\n    }\n  }\n\n  private generateEncoder(ctx: Context, varName: string, encoder?: Function) {\n    if (typeof encoder === 'function') {\n      ctx.pushCode(`${varName} = (${encoder}).call(this, ${varName}, vars);`);\n    }\n  }\n\n  private generatePointer(ctx: Context) {\n    const type = this.options.type;\n    const offset = ctx.generateOption(this.options.offset);\n    const tempVar = ctx.generateTmpVariable();\n    const nestVar = ctx.generateVariable(this.varName);\n\n    // Save current offset\n    ctx.pushCode(`var ${tempVar} = offset;`);\n\n    // Move offset\n    ctx.pushCode(`offset = ${offset};`);\n\n    if (this.options.type instanceof Parser) {\n      ctx.pushCode(`${nestVar} = {};`);\n      ctx.pushPath(this.varName);\n      this.options.type.generate(ctx);\n      ctx.popPath(this.varName);\n    } else if (aliasRegistry[this.options.type!]) {\n      const tempVar = ctx.generateTmpVariable();\n      ctx.pushCode(\n        `var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset);`\n      );\n      ctx.pushCode(\n        `${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`\n      );\n      if (this.options.type !== this.alias) ctx.addReference(this.options.type!);\n    } else if (Object.keys(PRIMITIVE_SIZES).indexOf(this.options.type!) >= 0) {\n      const typeName = PRIMITIVE_NAMES[type as PrimitiveTypes];\n      const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type as PrimitiveTypes];\n      ctx.pushCode(\n        `${nestVar} = dataView.get${typeName}(offset, ${littleEndian});`\n      );\n      ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type as PrimitiveTypes]};`);\n    }\n\n    // Restore offset\n    ctx.pushCode(`offset = ${tempVar};`);\n  }\n\n  // @ts-ignore TS6133\n  private generate_encodePointer(ctx: Context) {\n    // TODO\n  }\n\n  private generateSaveOffset(ctx: Context) {\n    const varName = ctx.generateVariable(this.varName);\n    ctx.pushCode(`${varName} = offset`);\n  }\n\n  // @ts-ignore TS6133\n  private generate_encodeSaveOffset(ctx: Context) {\n    // TODO\n  }\n}\n","\nimport { Options, Vue } from 'vue-class-component';\nimport JsonTree from 'vue-json-tree';\nimport { Prop, Watch } from 'vue-property-decorator';\nimport { CustomParser } from '@/parser/util';\n\n@Options({\n  components: {\n    JsonTree,\n  },\n})\nexport default class ParserView extends Vue {\n  inputText = '';\n  inputType = 'dec';\n  results: any = { error: 'no input' };\n  resetKey = 1;\n\n  @Prop({ type: Function })\n  getParser!: () => CustomParser;\n\n  mounted() {\n    // console.log(this.getParser().getCode());\n    this.startParse();\n  }\n\n  addQuery() {\n    this.$router.push({\n      query: { text: this.inputText, type: this.inputType },\n    });\n  }\n\n  startParse() {\n    this.inputText = this.$route.query.text ? '' + this.$route.query.text : '';\n    this.inputType = this.$route.query.type\n      ? '' + this.$route.query.type\n      : 'hex';\n    try {\n      const dataArray = this.getInputDataArray();\n      if (dataArray.length === 0) {\n        this.results = { error: 'no input' };\n        return;\n      }\n      this.results = this.getParser().parse(Buffer.from(dataArray));\n      this.resetKey++;\n    } catch (e) {\n      console.error(e);\n      this.results = { error: e.message, e };\n    }\n  }\n\n  getInputDataArray() {\n    const dataString = this.$route.query.text\n      ? '' + this.$route.query.text\n      : '';\n    let dataArray = [];\n    if (dataString.indexOf(',') >= 0) {\n      dataArray = dataString\n        .trim()\n        .split(',')\n        .map(e => {\n          return e.trim();\n        })\n        .filter(e => {\n          return e.length > 0;\n        });\n    } else {\n      dataArray = dataString\n        .trim()\n        .split(' ')\n        .map(e => {\n          return e.trim();\n        })\n        .filter(e => {\n          return e.length > 0;\n        });\n    }\n    if (this.inputType === 'hex') {\n      dataArray = dataArray.map(e => {\n        return parseInt(e, 16);\n      });\n    } else {\n      dataArray = dataArray.map(e => {\n        return parseInt(e);\n      });\n    }\n    return dataArray;\n  }\n\n  @Watch('$route')\n  routeChange(from: any, to: any) {\n    this.startParse();\n  }\n}\n","<template>\n  <div>\n    <div id=\"nav\">\n      <router-link to=\"/ble-adv\">BleAdv</router-link>\n      |\n      <router-link to=\"/ble-hci\">BleHci</router-link>\n    </div>\n    <router-view />\n  </div>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#nav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\n#nav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=1313ea82\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=1313ea82&lang=css\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <h1>BLE adv analyze</h1>\n    <br />\n    <br />\n    <ParserView :getParser=\"getParser\"></ParserView>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component';\nimport { BleAdvertisementParser } from '@/parser/ble/adv';\nimport ParserView from '@/components/ParserView.vue';\n\n@Options({\n  components: {\n    ParserView,\n  },\n})\nexport default class BleAdvertisement extends Vue {\n  getParser() {\n    return BleAdvertisementParser;\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n","import { getDefaultParser, getNestParser } from '@/parser/util';\n\nconst advFlags = getNestParser(parser => {\n  parser\n    //上位ビットから\n    .bit3('BIT6-8_Reserved')\n    .bit1('BIT5_Simultaneous_LE_and_BR_ERD_to_Same_Device_Capable_Host')\n    .bit1('BIT4_Simultaneous_LE_and_BR_ERD_to_Same_Device_Capable_Controller')\n    .bit1('BIT3_BR_EDR_Not_Supported')\n    .bit1('BIT2_LE_General_Discoverable_Mode')\n    .bit1('BIT1_LE_Limited_Discoverable_Mode');\n});\n\nconst advUuid16 = getNestParser(parser => {\n  parser.array('uuids', {\n    type: getNestParser(p => {\n      p.string('uuid', { length: 2, encoding: 'hex' });\n    }),\n    length: function() {\n      // @ts-ignore\n      return (this.length - 1) / 2;\n    },\n  });\n});\n\nconst advUuid32 = getNestParser(parser => {\n  parser.array('uuids', {\n    type: getNestParser(p => {\n      p.string('uuid', { length: 4, encoding: 'hex' });\n    }),\n    length: function() {\n      // @ts-ignore\n      return (this.length - 1) / 4;\n    },\n  });\n});\n\nconst advLocalName = getNestParser(parser => {\n  parser.string('localName', {\n    length: function() {\n      // @ts-ignore\n      return this.length - 1;\n    },\n  });\n});\n\nconst advDefault = getNestParser(parser => {\n  parser.array('data', {\n    type: 'uint8',\n    length: function() {\n      // @ts-ignore\n      return this.length - 1;\n    },\n  });\n});\n\nconst oneAdPaser = getDefaultParser(parser => {\n  parser.uint8('length').enum('type', 'uint8', {\n    list: {\n      1: { meaning: 'Flags', choice: advFlags },\n      2: { meaning: 'UUID 16bit(Incomplete)' },\n      3: { meaning: 'UUID 16bit(Complete)' },\n      4: { meaning: 'UUID 32bit(Incomplete)' },\n      5: { meaning: 'UUID 32bit(Complete)' },\n      6: { meaning: 'UUID 128bit(Incomplete)' },\n      7: { meaning: 'UUID 128bit(Complete)' },\n      8: { meaning: 'Shortened Local Name', choice: advLocalName },\n      9: { meaning: 'Complete Local Name', choice: advLocalName },\n      0x0a: { meaning: 'Tx Power Level' },\n      0xff: { meaning: 'Manufacture data' },\n    },\n    defaultChoice: advDefault,\n    nest: false,\n  });\n});\n\nexport const BleAdvertisementParser = getDefaultParser(parser => {\n  parser.endianess('little').array('adv', {\n    type: oneAdPaser,\n    readUntil: function(item, subArray) {\n      // @ts-ignore\n      return subArray.length === 0;\n    },\n  });\n});\n","\nimport { Options, Vue } from 'vue-class-component';\nimport { BleAdvertisementParser } from '@/parser/ble/adv';\nimport ParserView from '@/components/ParserView.vue';\n\n@Options({\n  components: {\n    ParserView,\n  },\n})\nexport default class BleAdvertisement extends Vue {\n  getParser() {\n    return BleAdvertisementParser;\n  }\n}\n","import { render } from \"./BleAdvertisement.vue?vue&type=template&id=03bd28c5\"\nimport script from \"./BleAdvertisement.vue?vue&type=script&lang=ts\"\nexport * from \"./BleAdvertisement.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport BleAdvertisement from '@/views/BleAdvertisement.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    redirect: '/ble-adv',\n  },\n  {\n    path: '/ble-adv',\n    name: 'BleAdv',\n    component: BleAdvertisement,\n  },\n  {\n    path: '/ble-hci',\n    name: 'BleHci',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ '../views/BleHci.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\ncreateApp(App as any)\n  .use(router)\n  .mount('#app');\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=1313ea82&lang=css\""],"sourceRoot":""}